//Support all 3 functionalities in average O(1)

class RandomizedSet {

    ArrayList<Integer> lis;
    Map<Integer,Integer> resMap;
    Random rand = new Random();
    
    /** Initialize your data structure here. */
    public RandomizedSet() {
        lis = new ArrayList<>();
        resMap = new HashMap<>();
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    public boolean insert(int val) {
        if(resMap.containsKey(val)) return false;
        resMap.put(val, lis.size());
        lis.add(val);
        return true;
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    public boolean remove(int val) {
        if(!resMap.containsKey(val)) return false;
        int loc = resMap.get(val);
        if (loc < lis.size() - 1 ) { 
            int lastone = lis.get(lis.size() - 1 );
            lis.set(loc,lastone);
            resMap.put(lastone, loc);
        }
        resMap.remove(val);
        lis.remove(lis.size() - 1);
        return true;
    }
    
    /** Get a random element from the set. */
    public int getRandom() {
        return lis.get( rand.nextInt(lis.size()) );
    }
}

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet obj = new RandomizedSet();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */
